// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  email          String    @unique
  name           String
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  street         String?
  city           String?
  postalCode     String?
  mobile         String?

  accounts          Account[]
  pets              Pet[]
  hotelReservations HotelReservation[]
  HotelReview       HotelReview[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Pet {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  userId     String  @db.ObjectId
  name       String
  breed      String?
  age        Int?
  chipNumber String  @unique
  remark     String?

  user             User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  HotelReservation HotelReservation[]
}

model Room {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  roomType        String
  roomPrice       Int
  groomingInclude Boolean
  groomingPrice   Int?
  title           String
  imageUrl        String
  description     String

  reservation HotelReservation[]
  review      HotelReview[]
}

model HotelReservation {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  roomId        String   @db.ObjectId
  petChipNumber String
  startDate     DateTime
  endDate       DateTime
  totalPrice    Int
  createdAt     DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  pet  Pet  @relation(fields: [petChipNumber], references: [chipNumber], onDelete: Cascade)
}

model HotelReview {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userId        String   @db.ObjectId
  roomId        String   @db.ObjectId
  reservationId String
  rating        Int
  review        String
  createdAt     DateTime @default(now())

  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
